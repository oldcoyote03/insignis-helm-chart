{{- if and .Values.tls.enabled .Values.tls.certs.selfSigner.enabled }}
kind: Job
apiVersion: batch/v1
metadata:
  name: {{ include "selfcerts.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "4"
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
  labels:
    {{- include "insignis.labels" . | nindent 4 }}
  {{- with .Values.labels }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  template:
    metadata:
      name: {{ include "selfcerts.fullname" . }}
      labels:
        {{- include "insignis.labels" . | nindent 8 }}
      {{- with .Values.labels }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      restartPolicy: Never
      containers:
        - name: flask-cert-generate-job
          image: "{{ .Values.tls.selfSigner.image.registry }}/{{ .Values.tls.selfSigner.image.repository }}:{{ .Values.tls.selfSigner.image.tag }}"
          imagePullPolicy: "{{ .Values.tls.selfSigner.image.pullPolicy }}"
          args:
            - generate
            - --client-only
            - --ca-secret={{ .Values.tls.certs.selfSigner.caSecret }}
            - --client-duration={{ .Values.tls.certs.selfSigner.clientCertDuration }}
            - --client-expiry={{ .Values.tls.certs.selfSigner.clientCertExpiryWindow }}
          env:
          - name: USER_NAME
            value: {{ .Values.database.user | quote }}
          - name: NAMESPACE
            value: {{ .Release.Namespace | quote }}
      serviceAccountName: {{ include "selfcerts.fullname" . }}
{{- end}}